var reverseBits = function(n, i = 10, r = 0) {
    while (i--) r = (r << 1) + (n & 1), n >>= 1
    return r >>> 0
};

// 循环32次，r每次左移一位，n每次右移一位，n & 1取得最右位的数，放入r
// 若r已经31位（如1011111111111111111110111111110），继续左移1位，最左侧的1移到符号位，含义变成-
// >>>0，利用>>>无符号右移时，会将符号位重新看作数，不真正位移
// 第32位的1不再代表-，-消失。代表数，多了2的32次方
// >>>0的结果 = 原来负数 + 2的32次方，负数变回无符号整数
// 代码

reverseBits(1101110001)